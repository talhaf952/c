Basics:
C is a general-purpose programming language, developed Dennis Ritchie at the Bell Laboratories in 1972, and still quite popular.
Used to develop operating systems, databases, applications, etc.
C is strongly associated with UNIX, as it was developed to write the UNIX operating system.

Syntax:
#include <stdio.h>
int main() {
  printf("Hello World!");
  return 0;
}

#include <stdio.h> is a header file library that lets us work with input and output functions, such as printf() (used in line 4). Header files add functionality to C programs.
This is called a function. Any code inside its curly brackets {} will be executed.
printf() is a function used to output/print text to the screen.
return 0 ends the main() function.

C Format Specifiers:
Format specifiers are used together with the printf() function to tell the compiler what type of data the variable is storing. It is basically a placeholder for the variable value.
A format specifier starts with a percentage sign %, followed by a character.
use %d for int, %c for char and %f for float

The general rules for naming variables are:
Names can contain letters, digits and underscores
Names must begin with a letter or an underscore (_)
Names are case-sensitive (myVar and myvar are different variables)
Names cannot contain whitespaces or special characters like !, #, %, etc.
Reserved words (such as int) cannot be used as names

Output:
printf("Programming Lecture.");
printf("I shall be the game changer.");
printf("I shall be millionaire.");

To get user input, you can use the scanf() function:
#include <stdio.h>
int main() {
    int number;
    printf("Enter Number: ");
    scanf("%d",&number);
    printf("You entered %d", number);
  return 0;
}

Example:
#include <stdio.h>
int main() {
  char firstName[30];
printf("Enter your first name and press enter: \n");
  scanf("%s", &firstName);
  printf("Hello %s", firstName);
  return 0;
}

Example:
#include <stdio.h>
int main() {
  char character;
printf("Enter your first name and press enter: ");
  scanf("%c", &character);
  printf("Hello %c", character);
  return 0;
}

Comments:
Comments can be used to explain code, and to make it more readable. It can also be used to prevent execution when testing alternative code.
Comments can be singled-lined or multi-lined.
Single-line comments start with two forward slashes (//).
Any text between // and the end of the line is ignored by the compiler (will not be executed).
Multi-line comments start with /* and ends with */.
Any text between /* and */ will be ignored by the compiler:

Labs to solve
Lab 01
task 1,2,3,4

Lab 02
task 1,2,3,4,5,6

Operators
Operators are used to perform operations on variables and values.
C divides the operators into the following groups:
Arithmetic operators
Assignment operators
Comparison operators
Logical operators
Bitwise operators

Arithmetic Operators
+, -, /, *, %, ++, --

Assignment Operators
Assignment operators are used to assign values to variables.
we use the assignment operator (=) to assign the value to a variable.
The addition assignment operator (+=) adds a value to a variable

=	x = 5	x = 5	
+=	x += 3	x = x + 3	
-=	x -= 3	x = x - 3	
*=	x *= 3	x = x * 3	
/=	x /= 3	x = x / 3	
%=	x %= 3	x = x % 3	
&=	x &= 3	x = x & 3	
|=	x |= 3	x = x | 3	
^=	x ^= 3	x = x ^ 3	
>>=	x >>= 3	x = x >> 3	
<<= x <<= 3	x = x << 3

C Booleans
in programming, we need a data type that can only have one of two values, like:
YES / NO
ON / OFF
TRUE / FALSE
For this, C has a bool data type, which is known as booleans.
